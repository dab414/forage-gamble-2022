ggplot(aes(x = current_transition, y = transcode, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode - se, ymax = transcode + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~experiment) +
labs(
x = 'Current Transition',
y = 'Proportion of Switching',
fill = 'Other Transition'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
d[d$experiment=='foraging' & d$current_transition=='increase',]
head(d[d$experiment=='foraging' & d$current_transition=='increase',])
getwd()
chwd('../preprocessing')
cwd('../preprocessing')
??chwd
setwd('../preprocessing')
getwd()
setwd('../eda')
rm(ls(list = all))
rm(list = ls())
ks()
ls()
library(data.table)
library(tidyverse)
library(ez)
library(lme4)
d <- read.csv('../../data/rvts.csv')
head(d)
N_disconnect <- length(unique(d[d$experiment=='disconnect',]$subject))
pt <- d %>%
filter(experiment == 'disconnect', difference == 0, rightpoints == 3 | rightpoints == 1) %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', ''))))) %>%
filter(totalPoints > shift(totalPoints), !is.na(point_transition)) %>%
group_by(subject, point_transition) %>%
summarize(rt_ = mean(rt), transcode_ = mean(transcode))
pt %>%
group_by(point_transition) %>%
summarize(rt_mean = mean(rt_), rt_se = sd(rt_) / sqrt(N_disconnect), transcode_mean = mean(transcode_), transcode_se = sd(transcode_) / sqrt(N_disconnect)) %>%
gather(col, outcome, rt_mean:transcode_se) %>%
separate(col, into = c('metric', 'measure'), sep = '_') %>%
spread(measure, outcome) %>%
mutate(metric = factor(metric)) %>%
mutate(metric = recode(metric, `rt` = 'Reponse Time (ms)', `transcode` = 'Proportion of Switching')) %>%
ggplot(aes(x = point_transition, y = mean)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = .5) +
facet_wrap(~metric, scales = 'free') +
labs(
x = 'Point Transition Condition',
y = ''
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
m1 <- ezANOVA(wid = subject, within = .(point_transition), dv = transcode_, detailed = TRUE, data = pt)
increasing <- pt[pt$point_transition == 'increasing',]$transcode_
stay_high <- pt[pt$point_transition == 'stay high',]$transcode_
t.test(increasing, stay_high, paired = TRUE)
d %>%
filter(difference == 0) %>%
group_by(subject, current_transition, other_transition, experiment) %>%
summarize(transcode_ = mean(transcode)) %>%
group_by(current_transition, other_transition, experiment) %>%
summarize(transcode = mean(transcode_), se = sd(transcode_) / sqrt(78)) %>%
filter(!is.na(current_transition)) %>%
ggplot(aes(x = current_transition, y = transcode, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode - se, ymax = transcode + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~experiment) +
labs(
x = 'Current Transition',
y = 'Proportion of Switching',
fill = 'Other Transition'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
head(d[d$other_transition=='decrease',])
setwd('../preprocessing/')
rm(list=ls())
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment')
disconnect_cued$experiment <- 'disconnect'
disconnect_rvts$experiment <- 'disconnect'
foraging_cued$experiment <- 'foraging'
foraging_rvts$experiment <- 'foraging'
cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_transition <- ifelse(shift(rvts$current_points) == rvts$current_points, 'constant',
ifelse(shift(rvts$current_points) < rvts$current_points, 'increase',
ifelse(shift(rvts$current_points) > rvts$current_points, 'decrease', '')))
rvts$other_transition <- ifelse(shift(rvts$other_points) == rvts$other_points, 'constant',
ifelse(shift(rvts$other_points) < rvts$other_points, 'increase',
ifelse(shift(rvts$other_points) > rvts$other_points, 'decrease', '')))
head(rvts[rvts$other_transition == 'decrease' & rvts$experiment == 'foraging',])
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
head(foraging_rvts)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment', 'trial')
disconnect_cued$experiment <- 'disconnect'
disconnect_rvts$experiment <- 'disconnect'
foraging_cued$experiment <- 'foraging'
foraging_rvts$experiment <- 'foraging'
cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
head(rvts)
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_transition <- ifelse(shift(rvts$current_points) == rvts$current_points, 'constant',
ifelse(shift(rvts$current_points) < rvts$current_points, 'increase',
ifelse(shift(rvts$current_points) > rvts$current_points, 'decrease', '')))
rvts$other_transition <- ifelse(shift(rvts$other_points) == rvts$other_points, 'constant',
ifelse(shift(rvts$other_points) < rvts$other_points, 'increase',
ifelse(shift(rvts$other_points) > rvts$other_points, 'decrease', '')))
head(rvts)
head(rvts[rvts$other_transition=='decrease',])
rvts[1:20,]
head(rvts[rvts$other_transition=='decrease' & rvts$experiment=='foraging',])
rvts[47040:47060,]
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment', 'trial';)
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment', 'trial')
disconnect_cued$experiment <- 'disconnect'
disconnect_rvts$experiment <- 'disconnect'
foraging_cued$experiment <- 'foraging'
foraging_rvts$experiment <- 'foraging'
cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_location <- ifelse(shift(rvts$response_location) == 'left', 'left', 'right')
rvts$other_location <- ifelse(shift(rvts$response_location) == 'left', 'right', 'left')
rvts$left_transition <- ifelse(rvts$leftpoints < shift(rvts$leftpoints), 'decrease',
ifelse(rvts$leftpoints == shift(rvts$leftpoints), 'constant',
ifelse(rvts$leftpoints > shift(rvts$leftpoints), 'increase', NA)))
rvts$right_transition <- ifelse(rvts$rightpoints < shift(rvts$rightpoints), 'decrease',
ifelse(rvts$rightpoints == shift(rvts$rightpoints), 'constant',
ifelse(rvts$rightpoints > shift(rvts$rightpoints), 'increase', NA)))
rvts$current_transition <- ifelse(current_location == 'left', rvts$left_transition, ifelse(current_location == 'right', rvts$right_transition, NA))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(current_location == 'right', rvts$right_transition, NA))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(rvts$current_location == 'right', rvts$right_transition, NA))
rvts$other_transition <- ifelse(rvts$other_location == 'left', rvts$left_transition, ifelse(rvts$other_location == 'right', rvts$right_transition, NA))
head(rvts[rvts$current_transition=='increase' & rvts$experiment == 'foraging',])
rvts[48180:48190,]
head(rvts[rvts$current_transition=='increase' & rvts$experiment == 'foraging' & rvts$transition != 'StartBlock',])
setwd('../eda')
rm(list=ls())
### rvts eda
### basic idea is im gonna use this script as a space to just riff around and see what's good in the data
### up here keep a comment log of stuff i've looked into
### dont necessarily keep the code for stuff that didn't work out, try to keep this script as clean as possible
## log
## frober & dreisbach stuff
## doing a ttest for increasing vs. steady high in disconnect is a strong result
##    no effects of RTs, no one way anova including other transition conditions (p = .07)
## how about a regression comparing difference > 0 across both studies?
## the interaction washes out when using a mixed model
## main effect of experiment, prob just more switching in foraging
## even no main effect of difference
## looking back at b&a2018
## were were all into the current v other stuff
## essentially, when difference = 0, is there a bias to be more sensitive to changes in value of the task just performed than not just performed
library(data.table)
library(tidyverse)
library(ez)
library(lme4)
d <- read.csv('../../data/rvts.csv')
head(d)
#### sudden reward increases ####
N_disconnect <- length(unique(d[d$experiment=='disconnect',]$subject))
pt <- d %>%
filter(experiment == 'disconnect', difference == 0, rightpoints == 3 | rightpoints == 1) %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', ''))))) %>%
filter(totalPoints > shift(totalPoints), !is.na(point_transition)) %>%
group_by(subject, point_transition) %>%
summarize(rt_ = mean(rt), transcode_ = mean(transcode))
pt %>%
group_by(point_transition) %>%
summarize(rt_mean = mean(rt_), rt_se = sd(rt_) / sqrt(N_disconnect), transcode_mean = mean(transcode_), transcode_se = sd(transcode_) / sqrt(N_disconnect)) %>%
gather(col, outcome, rt_mean:transcode_se) %>%
separate(col, into = c('metric', 'measure'), sep = '_') %>%
spread(measure, outcome) %>%
mutate(metric = factor(metric)) %>%
mutate(metric = recode(metric, `rt` = 'Reponse Time (ms)', `transcode` = 'Proportion of Switching')) %>%
ggplot(aes(x = point_transition, y = mean)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = .5) +
facet_wrap(~metric, scales = 'free') +
labs(
x = 'Point Transition Condition',
y = ''
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
m1 <- ezANOVA(wid = subject, within = .(point_transition), dv = transcode_, detailed = TRUE, data = pt)
increasing <- pt[pt$point_transition == 'increasing',]$transcode_
stay_high <- pt[pt$point_transition == 'stay high',]$transcode_
t.test(increasing, stay_high, paired = TRUE)
## THAT'S A RESULT!!!!!
#### regression of difference > 0 ####
d_constrain <- d[d$difference > 0,]
m2 <- glm(transcode ~ difference * experiment, data = d_constrain, family = binomial(link = 'logit'))
m2_glmer <- glmer(transcode ~ difference * experiment + (1 + difference | subject), data = d_constrain, family = binomial(link = 'logit'))
## model fits
m2_glmer_onedown <- glmer(transcode ~ difference * experiment + (1 | subject) + (0 + difference | subject), data = d_constrain, family = binomial(link = 'logit'))
d %>%
filter(difference == 0) %>%
group_by(subject, current_transition, other_transition, experiment) %>%
summarize(transcode_ = mean(transcode)) %>%
group_by(current_transition, other_transition, experiment) %>%
summarize(transcode = mean(transcode_), se = sd(transcode_) / sqrt(78)) %>%
filter(!is.na(current_transition)) %>%
ggplot(aes(x = current_transition, y = transcode, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode - se, ymax = transcode + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~experiment) +
labs(
x = 'Current Transition',
y = 'Proportion of Switching',
fill = 'Other Transition'
) +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'))
a <- d[d$difference==0 & d$experiment=='disconnect',]
ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = a)
a <- a %>%
group_by(subject, current_transition, other_transition) %>%
summarize(transcode = mean(transcode))
ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = a)
a %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count != 9)
p <- a %>%
group_by(current_transition, other_transition) %>%
summarize(pswitch = mean(transcode), se = sd(transcode) / sqrt(N_disconnect), count = sum(count))
a <- a %>%
group_by(subject, current_transition, other_transition) %>%
summarize(transcode = mean(transcode), count = n())
p <- a %>%
group_by(current_transition, other_transition) %>%
summarize(pswitch = mean(transcode), se = sd(transcode) / sqrt(N_disconnect), count = sum(count))
p
a %>%
group_by(current_transition, other_transition) %>%
summarize(pswitch = mean(transcode), se = sd(transcode) / sqrt(N_disconnect), count = sum(count)) %>%
gather(metric, value, pswitch:count)
a %>%
group_by(current_transition, other_transition) %>%
summarize(pswitch = mean(transcode), se = sd(transcode) / sqrt(N_disconnect), count = sum(count)) %>%
gather(metric, value, pswitch, count)
head(a)
a %>%
group_by(current_transition, other_transition) %>%
summarize(count = n())
a %>%
group_by(subject) %>%
summarize(count = n())
a %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count < 9)
a %>%
group_by(current_transition, other_transition) %>%
summarize(count = sum(count))
## drop Ps with missing cells
bad_subjects <- a %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count < 9)
## drop Ps with missing cells
bad_subjects <- a %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count < 9) %>%
select(subject)
nrow(bad_subjects)
a <- a[a$subject %in% bad_subjects,]
ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = a)
head(a)
a <- d[d$difference==0 & d$experiment=='disconnect',]
a <- a %>%
group_by(subject, current_transition, other_transition) %>%
summarize(transcode = mean(transcode), count = n())
## cell counts
a %>%
group_by(current_transition, other_transition) %>%
summarize(count = sum(count))
## drop Ps with missing cells
bad_subjects <- a %>%
group_by(subject) %>%
summarize(count = n()) %>%
filter(count < 9) %>%
select(subject)
bad_subjects <- bad_subjects$subject
a <- a[!a$subject %in% bad_subjects,]
head(a)
nrow(a)
ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = a)
a <- a %>%
mutate(current_transition_simple = ifelse(current_transition == 'constant', 'constant', 'change'),
other_transition_simple = ifelse(other_transition == 'constant', 'constant', 'change')) %>%
group_by(subject, current_transition_simple, other_transition_simple) %>%
summarize(transcode = mean(transcode), count = n())
head(a)
## cell counts
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(count = sum(count))
a <- d[d$difference==0 & d$experiment=='disconnect',]
a <- a %>%
mutate(current_transition_simple = ifelse(current_transition == 'constant', 'constant', 'change'),
other_transition_simple = ifelse(other_transition == 'constant', 'constant', 'change')) %>%
group_by(subject, current_transition_simple, other_transition_simple) %>%
summarize(transcode = mean(transcode), count = n())
## cell counts
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(count = sum(count))
ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = a)
ezANOVA(wid = subject, within = .(current_transition_simple, other_transition_simple), dv = transcode, detailed = TRUE, data = a)
head(a)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se), position = position_dodge(width = .9), width = .5)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('constant', 'change')),
current_transition_simple = factor(current_transition_simple, levels = c('constant', 'change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5)
a <- d[d$difference==0 & d$experiment=='disconnect',]
a <- a %>%
mutate(current_transition_simple = ifelse(current_transition == 'constant', 'Constant', 'Change'),
other_transition_simple = ifelse(other_transition == 'constant', 'Constant', 'Change')) %>%
group_by(subject, current_transition_simple, other_transition_simple) %>%
summarize(transcode = mean(transcode), count = n())
## cell counts
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(count = sum(count))
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('constant', 'change')),
current_transition_simple = factor(current_transition_simple, levels = c('constant', 'change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('Constant', 'Change')),
current_transition_simple = factor(current_transition_simple, levels = c('Constant', 'Change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5)
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('Constant', 'Change')),
current_transition_simple = factor(current_transition_simple, levels = c('Constant', 'Change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5) %>%
labs(
x = 'Current Task',
y = 'Proportion Switching',
fill = 'Other Task'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2,.8))
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('Constant', 'Change')),
current_transition_simple = factor(current_transition_simple, levels = c('Constant', 'Change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5) +
labs(
x = 'Current Task',
y = 'Proportion Switching',
fill = 'Other Task'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2,.8))
a %>%
group_by(current_transition_simple, other_transition_simple) %>%
summarize(transcode_ = mean(transcode), se = sd(transcode) / sqrt(N_disconnect)) %>%
mutate(other_transition_simple = factor(other_transition_simple, levels = c('Constant', 'Change')),
current_transition_simple = factor(current_transition_simple, levels = c('Constant', 'Change'))) %>%
ggplot(aes(x = current_transition_simple, y = transcode_), group = other_transition_simple) +
geom_bar(stat = 'identity', aes(fill = other_transition_simple), position = position_dodge(width = .9), color = 'black') +
geom_errorbar(aes(ymin = transcode_ - se, ymax = transcode_ + se, group = other_transition_simple), position = position_dodge(width = .9), width = .5) +
ylim(0,.5) +
labs(
x = 'Current Task',
y = 'Proportion Switching',
fill = 'Other Task'
) +
scale_fill_manual(values = c('Constant' = 'white', 'Change' = 'dark grey')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2,.8))
head(d)
q()
