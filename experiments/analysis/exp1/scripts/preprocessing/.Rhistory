spread(transition, rt) %>%
mutate(switch_cost = Switch - Repeat) %>%
select(-Repeat, -Switch)
hist(switch_costs$switch_cost, main = 'Switch Costs')
start <- nrow(rvts)
rvts <- rvts[rvts$transition != 'StartBlock',]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Startblock',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
start <- nrow(rvts)
rvts <- rvts[rvts$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
start <- nrow(rvts)
rvts <- rvts %>%
group_by(subject) %>%
summarize(rt_m = mean(rt), rt_sd = mean(rt)) %>%
inner_join(rvts) %>%
filter(rt <= rt_m + 2*rt_sd & rt >= rt_m - 2*rt_sd) %>%
select(-rt_m, -rt_sd)
trim_summary <- rbind(trim_summary, data.frame('reason' = '+/- 2 SDs on participant RT means',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
rvts_errors <- rvts
start <- nrow(rvts)
rvts <- rvts[rvts$error_trim == 0, ]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Error and trials after errors',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
bad_subjects
trim_summary
## add switch costs to rvts
rvts <- rvts %>%
inner_join(switch_costs)
select(-transition, -rightpoints, -leftpoints, -response_location, -error_trim)
head(rvts)
## add switch costs to rvts
rvts %>%
inner_join(switch_costs) %>%
head()
## add switch costs to rvts
rvts <- rvts %>%
inner_join(switch_costs) %>%
select(-transition, -rightpoints, -leftpoints, -response_location, -error_trim)
q()
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment')
disconnect_cued$experiment <- 'disconnect'
disconnect_rvts$experiment <- 'disconnect'
foraging_cued$experiment <- 'foraging'
foraging_rvts$experiment <- 'foraging'
cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
## drop subjects where i forgot to adjust the point threshold
pilot_subjects <- rvts %>%
group_by(subject) %>%
summarize(max_points = max(totalPoints)) %>%
filter(max_points < 100) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% pilot_subjects$subject,]
cued <- cued[!cued$subject %in% pilot_subjects$subject,]
bad_subjects <- rvts %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
filter(error > .15) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% bad_subjects,]
cued <- cued[!cued$subject %in% bad_subjects,]
trim_summary <- data.frame('reason' = c(), 'proportion_dropped' = c(), phase = c())
start <- nrow(cued)
cued <- cued[cued$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs over 10s',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued'))
cued <- cued[cued$transition != 'StartBlock',]
## compute switch costs
switch_costs <- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switch_cost = Switch - Repeat) %>%
select(-Repeat, -Switch)
hist(switch_costs$switch_cost, main = 'Switch Costs')
start <- nrow(rvts)
rvts <- rvts[rvts$transition != 'StartBlock',]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Startblock',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
start <- nrow(rvts)
rvts <- rvts[rvts$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
start <- nrow(rvts)
rvts <- rvts %>%
group_by(subject) %>%
summarize(rt_m = mean(rt), rt_sd = mean(rt)) %>%
inner_join(rvts) %>%
filter(rt <= rt_m + 2*rt_sd & rt >= rt_m - 2*rt_sd) %>%
select(-rt_m, -rt_sd)
trim_summary <- rbind(trim_summary, data.frame('reason' = '+/- 2 SDs on participant RT means',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
rvts_errors <- rvts
start <- nrow(rvts)
rvts <- rvts[rvts$error_trim == 0, ]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Error and trials after errors',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts'))
bad_subjects
## add switch costs to rvts
rvts <- rvts %>%
inner_join(switch_costs) #%>%
#select(-transition, -rightpoints, -leftpoints, -response_location, -error_trim)
## trim switch cost outliers
sc <- rvts %>%
group_by(subject) %>%
summarize(switch_cost = unique(switch_cost))
sc %>%
ggplot(aes(x = switch_cost)) +
geom_histogram(color = 'black')
sc$sc_m <- mean(sc$switch_cost)
sc$sc_sd <- sd(sc$switch_cost)
bad_subjects <- sc[sc$switch_cost >= sc$sc_m + 2*sc$sc_sd | sc$switch_cost <= sc$sc_m - 2*sc$sc_sd,]$subject
rvts <- rvts[!rvts$subject %in% bad_subjects,]
## block times
rvts %>%
group_by(subject) %>%
summarize(block_time = mean(blockTime)) %>%
ggplot(aes(x = block_time)) +
geom_histogram(color = 'black')
rvts %>%
filter(experiment == 'foraging') %>%
group_by(subject, difference) %>%
summarize(count = n()) %>%
ggplot(aes(x = difference, y = count)) +
geom_line(aes(group = subject), alpha = .3)
two_points <- rvts %>%
filter(difference == 2, experiment == 'foraging') %>%
group_by(subject) %>%
summarize(count = n())
rvts %>%
group_by(subject) %>%
summarize(block_time = mean(blockTime)) %>%
inner_join(two_points) %>%
ggplot(aes(x = count, y = block_time)) +
geom_point() +
geom_smooth(method = 'lm')
rvts %>%
filter(experiment == 'foraging') %>%
group_by(subject, difference) %>%
summarize(count = n()) %>%
ggplot(aes(x = difference, y = count)) +
geom_line(aes(group = subject), alpha = .3)
two_points <- rvts %>%
filter(difference == 2, experiment == 'foraging') %>%
group_by(subject) %>%
summarize(count = n())
cor_data <- rvts %>%
group_by(subject) %>%
summarize(block_time = mean(blockTime)) %>%
inner_join(two_points)
cor_data %>%
ggplot(aes(x = count, y = block_time)) +
geom_point() +
geom_smooth(method = 'lm')
cor.test(cor_data$block_time, cor_data$count)
q()
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../data/sub_data/disconnect_cued_full.csv')
disconnect_cued <- read.csv('../../../data/sub_data/disconnect_cued_full.csv')
library(tidyverse)
library(data.table)
disconnect_cued <- read.csv('../../../data/sub_data/disconnect_cued_full.csv')
disconnect_rvts <- read.csv('../../../data/sub_data/disconnect_rvts_full.csv')
foraging_cued <- read.csv('../../../data/sub_data/foraging_cued_full.csv')
foraging_rvts <- read.csv('../../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'experiment', 'trial')
disconnect_cued$experiment <- 'disconnect'
disconnect_rvts$experiment <- 'disconnect'
foraging_cued$experiment <- 'foraging'
foraging_rvts$experiment <- 'foraging'
cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_location <- ifelse(shift(rvts$response_location) == 'left', 'left', 'right')
rvts$other_location <- ifelse(shift(rvts$response_location) == 'left', 'right', 'left')
rvts$left_transition <- ifelse(rvts$leftpoints < shift(rvts$leftpoints), 'decrease',
ifelse(rvts$leftpoints == shift(rvts$leftpoints), 'constant',
ifelse(rvts$leftpoints > shift(rvts$leftpoints), 'increase', NA)))
rvts$right_transition <- ifelse(rvts$rightpoints < shift(rvts$rightpoints), 'decrease',
ifelse(rvts$rightpoints == shift(rvts$rightpoints), 'constant',
ifelse(rvts$rightpoints > shift(rvts$rightpoints), 'increase', NA)))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(rvts$current_location == 'right', rvts$right_transition, NA))
rvts$other_transition <- ifelse(rvts$other_location == 'left', rvts$left_transition, ifelse(rvts$other_location == 'right', rvts$right_transition, NA))
## drop subjects where i forgot to adjust the point threshold
pilot_subjects <- rvts %>%
group_by(subject) %>%
summarize(max_points = max(totalPoints)) %>%
filter(max_points < 100) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% pilot_subjects$subject,]
cued <- cued[!cued$subject %in% pilot_subjects$subject,]
nrow(pilot_subjects)
head(rvts)
library(tidyverse)
library(data.table)
## switching to processing one dataset at a time
cued <- read.csv('../../../data/sub_data/foraging_cued_full.csv')
rvts <- read.csv('../../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'trial')
#cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
#rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_location <- ifelse(shift(rvts$response_location) == 'left', 'left', 'right')
rvts$other_location <- ifelse(shift(rvts$response_location) == 'left', 'right', 'left')
rvts$left_transition <- ifelse(rvts$leftpoints < shift(rvts$leftpoints), 'decrease',
ifelse(rvts$leftpoints == shift(rvts$leftpoints), 'constant',
ifelse(rvts$leftpoints > shift(rvts$leftpoints), 'increase', NA)))
rvts$right_transition <- ifelse(rvts$rightpoints < shift(rvts$rightpoints), 'decrease',
ifelse(rvts$rightpoints == shift(rvts$rightpoints), 'constant',
ifelse(rvts$rightpoints > shift(rvts$rightpoints), 'increase', NA)))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(rvts$current_location == 'right', rvts$right_transition, NA))
rvts$other_transition <- ifelse(rvts$other_location == 'left', rvts$left_transition, ifelse(rvts$other_location == 'right', rvts$right_transition, NA))
## drop subjects where i forgot to adjust the point threshold
pilot_subjects <- rvts %>%
group_by(subject) %>%
summarize(max_points = max(totalPoints)) %>%
filter(max_points < 100) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% pilot_subjects$subject,]
cued <- cued[!cued$subject %in% pilot_subjects$subject,]
initialN <- length(unique(rvts$subject))
bad_subjects <- rvts %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
filter(error > .15) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% bad_subjects,]
cued <- cued[!cued$subject %in% bad_subjects,]
trim_summary <- data.frame('reason' = c(), 'proportion_dropped' = c(), inital_rows = c(), final_rows = c(), phase = c())
start <- nrow(cued)
cued <- cued[cued$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs over 10s',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', initial_rows = start, final_rows = nrow(cued)))
cued <- cued[cued$transition != 'StartBlock',]
## compute switch costs
switch_costs <- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switch_cost = Switch - Repeat) %>%
select(-Repeat, -Switch)
hist(switch_costs$switch_cost, main = 'Switch Costs')
start <- nrow(rvts)
rvts <- rvts[rvts$transition != 'StartBlock',]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Startblock',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', initial_rows = start, final_rows = nrow(rvts)))
start <- nrow(rvts)
rvts <- rvts[rvts$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', initial_rows = start, final_rows = nrow(rvts)))
start <- nrow(rvts)
rvts <- rvts %>%
group_by(subject) %>%
summarize(rt_m = mean(rt), rt_sd = mean(rt)) %>%
inner_join(rvts) %>%
filter(rt <= rt_m + 2*rt_sd & rt >= rt_m - 2*rt_sd) %>%
select(-rt_m, -rt_sd)
trim_summary <- rbind(trim_summary, data.frame('reason' = '+/- 2 SDs on participant RT means',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', initial_rows = start, final_rows = nrow(rvts)))
rvts_errors <- rvts
start <- nrow(rvts)
rvts <- rvts[rvts$error_trim == 0, ]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Error and trials after errors',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', initial_rows = start, final_rows = nrow(rvts)))
bad_subjects
## add switch costs to rvts
rvts <- rvts %>%
inner_join(switch_costs) #%>%
#select(-transition, -rightpoints, -leftpoints, -response_location, -error_trim)
## block times
rvts %>%
group_by(subject) %>%
summarize(block_time = mean(blockTime)) %>%
ggplot(aes(x = block_time)) +
geom_histogram(color = 'black')
trim_summary
write.csv(rvts, '../../data/rvts.csv', row.names = FALSE)
head(cued)
summary(factor(cued$transition))
## switching to processing one dataset at a time
cued <- read.csv('../../../data/sub_data/foraging_cued_full.csv')
summary(factor(cued$transition))
trim_summary
start <- nrow(cued)
cued <- cued[cued$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
library(tidyverse)
library(data.table)
## switching to processing one dataset at a time
cued <- read.csv('../../../data/sub_data/foraging_cued_full.csv')
rvts <- read.csv('../../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'trial')
#cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
#rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_location <- ifelse(shift(rvts$response_location) == 'left', 'left', 'right')
rvts$other_location <- ifelse(shift(rvts$response_location) == 'left', 'right', 'left')
rvts$left_transition <- ifelse(rvts$leftpoints < shift(rvts$leftpoints), 'decrease',
ifelse(rvts$leftpoints == shift(rvts$leftpoints), 'constant',
ifelse(rvts$leftpoints > shift(rvts$leftpoints), 'increase', NA)))
rvts$right_transition <- ifelse(rvts$rightpoints < shift(rvts$rightpoints), 'decrease',
ifelse(rvts$rightpoints == shift(rvts$rightpoints), 'constant',
ifelse(rvts$rightpoints > shift(rvts$rightpoints), 'increase', NA)))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(rvts$current_location == 'right', rvts$right_transition, NA))
rvts$other_transition <- ifelse(rvts$other_location == 'left', rvts$left_transition, ifelse(rvts$other_location == 'right', rvts$right_transition, NA))
## drop subjects where i forgot to adjust the point threshold
pilot_subjects <- rvts %>%
group_by(subject) %>%
summarize(max_points = max(totalPoints)) %>%
filter(max_points < 100) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% pilot_subjects$subject,]
cued <- cued[!cued$subject %in% pilot_subjects$subject,]
initialN <- length(unique(rvts$subject))
bad_subjects <- rvts %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
filter(error > .15) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% bad_subjects,]
cued <- cued[!cued$subject %in% bad_subjects,]
trim_summary <- data.frame('reason' = c(), 'proportion_dropped' = c(), rows_dropped = c(), total_rows = c(), phase = c())
start <- nrow(cued)
cued <- cued[cued$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs over 10s',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
start <- nrow(cued)
cued <- cued[cued$transition != 'StartBlock',]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'StartBlock',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
## compute switch costs
switch_costs <- cued %>%
group_by(subject, transition) %>%
summarize(rt = mean(rt)) %>%
spread(transition, rt) %>%
mutate(switch_cost = Switch - Repeat) %>%
select(-Repeat, -Switch)
hist(switch_costs$switch_cost, main = 'Switch Costs')
start <- nrow(rvts)
rvts <- rvts[rvts$transition != 'StartBlock',]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Startblock',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', rows_dropped = start - nrow(rvts), total_rows = start))
start <- nrow(rvts)
rvts <- rvts[rvts$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', rows_dropped = start - nrow(rvts), total_rows = start))
start <- nrow(rvts)
rvts <- rvts %>%
group_by(subject) %>%
summarize(rt_m = mean(rt), rt_sd = mean(rt)) %>%
inner_join(rvts) %>%
filter(rt <= rt_m + 2*rt_sd & rt >= rt_m - 2*rt_sd) %>%
select(-rt_m, -rt_sd)
trim_summary <- rbind(trim_summary, data.frame('reason' = '+/- 2 SDs on participant RT means',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', rows_dropped = start - nrow(rvts), total_rows = start))
rvts_errors <- rvts
start <- nrow(rvts)
rvts <- rvts[rvts$error_trim == 0, ]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Error and trials after errors',
'proportion_dropped' = 1 - (nrow(rvts) / start), phase = 'rvts', rows_dropped = start - nrow(rvts), total_rows = start))
start <- nrow(cued)
cued <- cued[cued$rt < 10000,]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'RTs longer than 10s',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
start <- nrow(cued)
cued <- cued %>%
group_by(subject) %>%
summarize(rt_m = mean(rt), rt_sd = mean(rt)) %>%
inner_join(cued) %>%
filter(rt <= rt_m + 2*rt_sd & rt >= rt_m - 2*rt_sd) %>%
select(-rt_m, -rt_sd)
trim_summary <- rbind(trim_summary, data.frame('reason' = '+/- 2 SDs on participant RT means',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
cued_errors <- cued
start <- nrow(cued)
cued <- cued[cued$error_trim == 0, ]
trim_summary <- rbind(trim_summary, data.frame('reason' = 'Error and trials after errors',
'proportion_dropped' = 1 - (nrow(cued) / start), phase = 'cued', rows_dropped = start - nrow(cued), total_rows = start))
trim_summary
write.csv(rvts, '../../../data/rvts_foraging.csv', row.names = FALSE)
write.csv(cued, '../../../data/cued_foraging.csv', row.names = FALSE)
write.csv(rvts_errors, '../../../data/rvts_errors_foraging.csv', row.names = FALSE)
write.csv(cued_errors, '../../../data/cued_errors_foraging.csv', row.names = FALSE)
length(unique(rvts$subject))
library(tidyverse)
library(data.table)
## switching to processing one dataset at a time
cued <- read.csv('../../../data/sub_data/foraging_cued_full.csv')
rvts <- read.csv('../../../data/sub_data/foraging_rvts_full.csv')
cued_keep <- c('workerId', 'rt', 'transition', 'trial', 'error')
rvts_keep <- c('workerId', 'blockTime', 'Block', 'rt', 'totalPoints', 'transition',
'rightpoints', 'leftpoints', 'response_location', 'error', 'trial')
#cued <- rbind(disconnect_cued[, cued_keep], foraging_cued[, cued_keep])
#rvts <- rbind(disconnect_rvts[, rvts_keep], foraging_rvts[, rvts_keep])
## compute vars
cued$error_trim <- ifelse(cued$error == 1 | shift(cued$error == 1), 1, 0)
rvts$error_trim <- ifelse(rvts$error == 1 | shift(rvts$error == 1), 1, 0)
cued$transcode <- ifelse(cued$transition == 'Switch', 1, 0)
rvts$transcode <- ifelse(rvts$transition == 'Switch', 1, 0)
colnames(cued)[colnames(cued) == 'workerId'] <- 'subject'
colnames(rvts)[colnames(rvts) == 'workerId'] <- 'subject'
rvts$difference <- ifelse(shift(rvts$response_location) == 'left',
rvts$rightpoints - rvts$leftpoints, rvts$leftpoints - rvts$rightpoints)
rvts <- rvts %>%
mutate(point_transition = ifelse(shift(rightpoints) == 1 & rightpoints == 3, 'increasing',
ifelse(shift(rightpoints) == 3 & rightpoints == 3, 'stay high',
ifelse(shift(rightpoints) == 1 & rightpoints == 1, 'stay low',
ifelse(shift(rightpoints) == 3 & rightpoints == 1, 'decreasing', '')))))
rvts$current_points <- ifelse(shift(rvts$response_location) == 'left', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'right', rvts$rightpoints, NA))
rvts$other_points <- ifelse(shift(rvts$response_location) == 'right', rvts$leftpoints, ifelse(shift(rvts$response_location) == 'left', rvts$rightpoints, NA))
rvts$current_location <- ifelse(shift(rvts$response_location) == 'left', 'left', 'right')
rvts$other_location <- ifelse(shift(rvts$response_location) == 'left', 'right', 'left')
rvts$left_transition <- ifelse(rvts$leftpoints < shift(rvts$leftpoints), 'decrease',
ifelse(rvts$leftpoints == shift(rvts$leftpoints), 'constant',
ifelse(rvts$leftpoints > shift(rvts$leftpoints), 'increase', NA)))
rvts$right_transition <- ifelse(rvts$rightpoints < shift(rvts$rightpoints), 'decrease',
ifelse(rvts$rightpoints == shift(rvts$rightpoints), 'constant',
ifelse(rvts$rightpoints > shift(rvts$rightpoints), 'increase', NA)))
rvts$current_transition <- ifelse(rvts$current_location == 'left', rvts$left_transition, ifelse(rvts$current_location == 'right', rvts$right_transition, NA))
rvts$other_transition <- ifelse(rvts$other_location == 'left', rvts$left_transition, ifelse(rvts$other_location == 'right', rvts$right_transition, NA))
## drop subjects where i forgot to adjust the point threshold
pilot_subjects <- rvts %>%
group_by(subject) %>%
summarize(max_points = max(totalPoints)) %>%
filter(max_points < 100) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% pilot_subjects$subject,]
cued <- cued[!cued$subject %in% pilot_subjects$subject,]
initialN <- length(unique(rvts$subject))
bad_subjects <- rvts %>%
group_by(subject) %>%
summarize(error = mean(error)) %>%
filter(error > .15) %>%
select(subject)
rvts <- rvts[!rvts$subject %in% bad_subjects,]
cued <- cued[!cued$subject %in% bad_subjects,]
length(unique(rvts$subject))
bad_subjects
q()
