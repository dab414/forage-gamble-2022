head(d)
N <- length(unique(d$subject))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .5) +
labs(
x = '',
y = 'Proportion of Task Switches'
)
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .5) +
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.1, .8))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .5) +
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2 .8))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .5) +
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'grey', 'Other Value Increae' = 'black')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode)) %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'grey', 'Other Value Increase' = 'black')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
a <- d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode))
a %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'grey', 'Other Value Increase' = 'black')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
m1 <- ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = d)
m1
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'constant',])
im
help(pf)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
m1 <- ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = d)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
dfd <- 84
SSd <- m1$ANOVA$SSd[4]
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'constant',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current constant')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'decrease',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current decrease')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
a %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9), color = 'black') +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'dark grey', 'Other Value Increase' = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
head(d)
summary(factor(d$Block))
## compute an impromptu trial count
t <- d %>%
group_by(subject) %>%
summarize(real_trial = 1:(nrow(.)))
head(t)
## compute an impromptu trial count
t <- d %>%
group_by(subject) %>%
mutate(real_trial = 1:(nrow(.)))
## compute an impromptu trial count
t <- d %>%
group_by(subject) %>%
summarize(real_trial = 1:(nrow(.)))
nrow(t) == nrow(d)
head(d)
tail(t)
nrow(d)
t <- d %>%
group_by(subject) %>%
group_map(compute_real_trial, transcode)
return(1:(length(v)))
compute_real_trial <- function(v) {
return(1:(length(v)))
}
t <- d %>%
group_by(subject) %>%
group_map(compute_real_trial, transcode)
compute_real_trial <- function(data, v) {
return(1:(length(v)))
}
t <- d %>%
group_by(subject) %>%
group_map(compute_real_trial, transcode)
t <- d %>%
group_by(subject) %>%
group_map(compute_real_trial, .)
head(d)
v <- c()
for (row in 1:(nrow(d))) {
if (row == 1 | d[row,]$block < d[row-1,]$block) {
v <- c(v, 1)
} else {
v <- c(v, v[length(v)] + 1)
}
}
head(d[d$subject=='A13KMWHXNI4C12', d$Block==2,])
head(d[d$subject=='A13KMWHXNI4C12' & d$Block==2,])
colnames(d) <- tolower(colnames(d))
v <- c()
for (row in 1:(nrow(d))) {
if (row == 1 | d[row,]$block < d[row-1,]$block) {
v <- c(v, 1)
} else {
v <- c(v, v[length(v)] + 1)
}
}
row
row == 1 | d[row,]$block < d[row-1,]$block
d[row,]$block < d[row-1,]$block
d[row-1,]$block
v <- c()
for (row in 1:(nrow(d))) {
if (row == 1) {
v <- c(v, 1)
} else if (d[row,]$block < d[row-1,]$block){
v <- c(v, 1)
} else {
v <- c(v, v[length(v)] + 1)
}
}
tail(d)
length(v) == nrow(d)
d$consec_trial <- v
d$consec_trial_sc <- scale(consec_trial)
d$consec_trial_sc <- scale(d$consec_trial)
km2 <- glmer(transcode ~ consec_trial_sc * difference + (1 + difference | subject), data = d, glmerControl = 'bobyQA', family = binomial(link = 'logit'), nAGQ = 1)
km2 <- glmer(transcode ~ consec_trial_sc * difference + (1 + difference | subject), data = d, control = glmerControl(optimizer = 'bobyQA'), family = binomial(link = 'logit'), nAGQ = 1)
km2 <- glmer(transcode ~ consec_trial_sc * difference + (1 + difference | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
d <- d %>%
group_by(subject) %>%
mutate(consec_trial = seq(n()))
tail(d)
tail(d$consec_trial)
seq(5)
summary(km2)
m2_down1 <- glmer(transcode ~ consec_trial_sc * difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_down1 <- glmer(transcode ~ consec_trial_sc * difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2, m2_down1)
m2 <- km2
anova(m2, m2_down1)
m2_down1 <- glmer(transcode ~ consec_trial_sc * difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_down2 <- glmer(transcode ~ consec_trial_sc * difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_down2 <- glmer(transcode ~ consec_trial_sc * difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2_down2, m2_down1)
m2 <- m2_down1
m2_noint <- glmer(transcode ~ consec_trial_sc + difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_noint <- glmer(transcode ~ consec_trial_sc + difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2, m2_noint)
summary(m2)
exp(fixef(m2))
exp(confint(m2))
summary(m2)
exp(fixef(m2))
exp(confint(m2, method = 'Wald'))
save(m2, file = 'winning_glmm')
load('winning_glm')
load('winning_glmm')
q()
library(tidyverse)
library(ez)
library(lme4)
d <- read.csv('../../../data/rvts_foraging.csv')
N <- length(unique(d$subject))
head(d)
a <- d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode))
a %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9), color = 'black') +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'dark grey', 'Other Value Increase' = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
m1 <- ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = d)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
dfd <- 84
SSd <- m1$ANOVA$SSd[4]
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'constant',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current constant')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'decrease',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current decrease')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
## code and center model vars
colnames(d) <- tolower(colnames(d))
## compute an impromptu trial count
d <- d %>%
group_by(subject) %>%
mutate(consec_trial = seq(n()))
d$consec_trial_sc <- scale(d$consec_trial)
load('winning_glmm')
summary(m2)
exp(fixef(m2))
exp(confint(m2, method = 'Wald'))
m2_noint <- glmer(transcode ~ consec_trial_sc + difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2, m2_noint)
m2_nodiff1 <- glmer(transcode ~ consec_trial_sc + difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_nodiff2 <- glmer(transcode ~ consec_trial_sc + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2_nodiff1, m2_nodiff2)
m2_notrial <- glmer(transcode ~  difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2_notrial, m2_nodiff1)
q()
library(tidyverse)
library(ez)
library(lme4)
d <- read.csv('../../../data/rvts_foraging.csv')
N <- length(unique(d$subject))
head(d)
a <- d %>%
group_by(subject, current_transition, other_transition) %>%
summarize(sw_ = mean(transcode))
a %>%
group_by(current_transition, other_transition) %>%
summarize(sw = mean(sw_), se = sd(sw_) / sqrt(N)) %>%
mutate(current_transition = recode(current_transition, `decrease` = 'Current Value Decrease', `constant` = 'Current Value Constant'),
other_transition = recode(other_transition, `increase` = 'Other Value Increase', `constant` = 'Other Value Constant')) %>%
ggplot(aes(x = current_transition, y = sw, group = other_transition)) +
geom_bar(stat = 'identity', aes(fill = other_transition), position = position_dodge(width = .9), color = 'black') +
geom_errorbar(aes(ymin = sw - se, ymax = sw + se), position = position_dodge(width = .9), width = .3)+
labs(
x = '',
y = 'Proportion of Task Switches',
fill = ''
) +
ylim(0,1) +
scale_fill_manual(values = c('Other Value Constant' = 'dark grey', 'Other Value Increase' = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(.2, .8))
m1 <- ezANOVA(wid = subject, within = .(current_transition, other_transition), dv = transcode, detailed = TRUE, data = d)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
dfd <- 84
SSd <- m1$ANOVA$SSd[4]
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'constant',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current constant')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
im <- ezANOVA(wid = subject, within = .(other_transition), dv = transcode, detailed = TRUE, data = d[d$current_transition == 'decrease',])
dfn <- 1
SSn <- im$ANOVA$SSn[2]
msb <- SSn / dfn
mse <- SSd / dfd
f <- msb / mse
p <- 1 - pf(f, dfn, dfd)
n2p <- SSn / (SSn + SSd)
print('Simple effect of other for current decrease')
print(paste0('F(', dfn, ', ', dfd, ') = ', round(f, 2), ', ', round(p, 3), ', eta = ', round(n2p, 2)))
## code and center model vars
colnames(d) <- tolower(colnames(d))
## compute an impromptu trial count
d <- d %>%
group_by(subject) %>%
mutate(consec_trial = seq(n()))
d$consec_trial_sc <- scale(d$consec_trial)
load('winning_glmm')
summary(m2)
exp(fixef(m2))
exp(confint(m2, method = 'Wald'))
m2_noint <- glmer(transcode ~ consec_trial_sc + difference + (0 + difference | subject) + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2, m2_noint)
m2_nodiff1 <- glmer(transcode ~ consec_trial_sc + difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
m2_nodiff2 <- glmer(transcode ~ consec_trial_sc + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2_nodiff1, m2_nodiff2)
m2_notrial <- glmer(transcode ~  difference + (1 | subject), data = d, control = glmerControl(optimizer = 'bobyqa'), family = binomial(link = 'logit'), nAGQ = 1)
anova(m2_notrial, m2_nodiff1)
d$difference_low <- d$difference + 2
d$difference_high <- d$difference - 2
m_lowd1 <- glmer(transcode ~ difference_low + consec_trial_sc + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = logit), control = glmerControl(optimizer = 'bobyqa'))
d$difference_low <- d$difference + 2
d$difference_high <- d$difference - 2
m_lowd1 <- glmer(transcode ~ difference_low + consec_trial_sc + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_lowd2 <- glmer(transcode ~ difference_low + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = logit), control = glmerControl(optimizer = 'bobyqa'))
m_lowd2 <- glmer(transcode ~ difference_low + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_lowd2 <- glmer(transcode ~ difference_low + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
summary(m_lowd1)
exp(fixef(m_lowd1))
exp(confint(m_lowd1, method = 'Wald'))
anova(m_lowd1, m_lowd2)
sd(d$consec_trial)
max(d$consec_trial)
max(d$trial)
311*4
224/1244
m_highd1 <- glmer(transcode ~ difference_high + consec_trial_sc + (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_highd2 <- glmer(transcode ~ difference_high + (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
summary(m_highd1)
exp(fixef(m_highd1))
exp(confint(m_highd1, method = 'Wald'))
anova(m_highd1, m_highd2)
d$difference_low <- d$difference + 2
d$difference_high <- d$difference - 2
m_lowd1 <- glmer(transcode ~ difference_low * consec_trial_sc + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_lowd2 <- glmer(transcode ~ difference_low + difference_low:consec_trial_sc + (0 + difference_low | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
summary(m_lowd1)
exp(fixef(m_lowd1))
exp(confint(m_lowd1, method = 'Wald'))
anova(m_lowd1, m_lowd2)
m_highd1 <- glmer(transcode ~ difference_high * consec_trial_sc + (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_highd2 <- glmer(transcode ~ difference_high + difference_high:consec_trial_sc (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_highd2 <- glmer(transcode ~ difference_high + difference_high:consec_trial_sc + (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
m_highd2 <- glmer(transcode ~ difference_high + difference_high:consec_trial_sc + (0 + difference_high | subject) + (1 | subject), data = d, family = binomial(link = 'logit'), control = glmerControl(optimizer = 'bobyqa'))
summary(m_highd1)
exp(fixef(m_highd1))
exp(confint(m_highd1, method = 'Wald'))
anova(m_highd1, m_highd2)
save(m_lowd1, file = 'm_lowd1')
load('m_lowd1')
load('m_lowd2')
save(m_lowd2, file = 'm_lowd2')
load('m_lowd2')
save('m_highd1')
save('m_highd2')
save('m_highd1', file = 'm_highd1')
save('m_highd2', file = 'm_highd2')
load('m_highd1')
load('m_highd2')
q()
